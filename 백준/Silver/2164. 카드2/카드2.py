"""
해당 문제는 큐 자료구조를 이용하여 해결할 수 있습니다. 
우선 1부터 N까지의 카드를 큐에 넣은 후, 
큐가 빌 때까지 반복하여 문제에서 주어진 동작을 수행하면 됩니다.

구체적인 알고리즘은 다음과 같습니다.

1. 1부터 N까지의 카드를 큐에 넣는다.
2. 큐의 길이가 1이 될 때까지 다음을 반복한다.
- 큐에서 가장 위에 있는 카드를 버린다.
- 그 다음으로 위에 있는 카드를 큐의 맨 아래에 추가한다.
3. 마지막으로 남은 카드를 출력한다.

이를 파이썬 코드로 구현하면 다음과 같습니다.
"""

from collections import deque

n = int(input())
cards = deque(range(1, n+1))

while len(cards) > 1:
    cards.popleft()
    cards.rotate(-1)

print(cards[0])

"""
여기서 deque는 파이썬의 라이브러리 중 하나로, 큐 자료구조를 구현하는 데 사용됩니다.
popleft() 메소드는 큐에서 가장 왼쪽에 있는 원소를 꺼내는 메소드이며, 
rotate() 메소드는 큐를 주어진 인자만큼 회전시키는 메소드입니다.
위 코드에서는 rotate(-1)을 호출하여 큐를 한 칸씩 왼쪽으로 이동시키고 있습니다.
"""