'''
이 문제를 해결하기 위한 핵심 아이디어는 주어진 합 S를 만들기 위해 가능한 한 큰 수의 개수를 사용하는 것입니다.
서로 다른 자연수들의 합으로 S를 만들 때, 자연수들이 작을수록 더 많은 수를 사용할 수 있습니다.
예를 들어, 1부터 시작하여 차례대로 더해나가면서 S를 초과하지 않는 범위에서 가능한 많은 수를 사용하는 것이 핵심입니다.

문제 해결 방법은 다음과 같습니다:
1. 자연수 누적합 계산: 1부터 시작하여 자연수를 차례대로 더하면서 누적합을 계산합니다.
2. 누적합이 S를 초과할 때까지 반복: 누적합이 S를 초과하지 않을 때까지 자연수를 계속 더합니다.
3. 자연수 개수 출력: S를 초과하기 직전까지 사용된 자연수의 개수가 N의 최댓값이 됩니다.
'''

def max_natural_number(S):
    # 누적합과 자연수 카운터 초기화
    total = 0
    count = 0

    # 누적합이 S를 초과할 때까지 자연수 더하기
    while total <= S:
        count += 1
        total += count

    # S를 초과하기 직전까지의 자연수 개수가 N의 최대값
    return count - 1

S = int(input())
print(max_natural_number(S))