'''
이 문제는 주어진 숫자들을 재배열하여 30의 배수가 되는 가장 큰 수를 찾는 문제입니다.
30의 배수가 되기 위한 두 가지 주요 조건이 있습니다:
1. 숫자의 합이 3의 배수여야 합니다: 3의 배수의 특징은 그 숫자를 구성하는 각 자리 수의 합이 3의 배수여야 합니다.
2. 숫자에 0이 포함되어야 합니다: 어떤 수가 10의 배수가 되기 위해서는 그 수의 일의 자리가 0이어야 합니다.

이를 바탕으로 문제를 해결하기 위한 접근 방법은 다음과 같습니다:
1. 입력 숫자를 각 자리 숫자로 분리: 입력받은 숫자 N을 문자열로 취급하여 각 자리 숫자를 리스트로 변환합니다.
2. 3의 배수 조건 확인: 리스트에 있는 모든 숫자의 합이 3의 배수인지 확인합니다.
3. 0의 포함 여부 확인: 리스트에 0이 존재하는지 확인합니다.
4. 조건 충족 시 최대 수 생성: 만약 위의 두 조건을 모두 만족한다면, 리스트를 내림차순으로 정렬하여 가장 큰 수를 생성합니다.
5. 조건 불충족 시 -1 출력: 위의 두 조건 중 하나라도 만족하지 않는다면, 30의 배수를 만들 수 없으므로 -1을 출력합니다.
'''

def find_largest_multiple_of_30(N):
    # 숫자를 개별 자리수로 분리
    digits = [int(d) for d in str(N)]

    # 3의 배수 조건과 0의 포함 여부 확인
    if sum(digits) % 3 == 0 and 0 in digits:
        # 내림차순으로 정렬하여 가장 큰 수 생성
        return ''.join(map(str, sorted(digits, reverse = True)))
    else:
        # 30의 배수를 만들 수 없음
        return -1

N = int(input())
print(find_largest_multiple_of_30(N))