"""
다리를 지을 수 있는 경우의 수는 조합(combination)으로 구할 수 있습니다. 
서쪽 N개의 사이트 중에서 M개의 동쪽 사이트에 연결될 사이트를 선택하는 경우의 수를 구하면 됩니다. 
이때, 동쪽 사이트는 서쪽 사이트보다 많으므로, 조합의 대상이 되는 수는 동쪽 사이트 중 M개를 선택하는 것입니다.

따라서, 파이썬의 math 모듈에 있는 comb 함수를 사용하여 다리를 지을 수 있는 경우의 수를 구하면 됩니다. 
comb 함수는 n개 중 r개를 선택하는 조합의 수를 반환합니다.
"""

import math

T = int(input())

for _ in range(T):
    N, M = map(int, input().split())
    bridges = math.comb(M, N)
    print(bridges)

"""
먼저 테스트 케이스의 개수 T를 입력 받습니다. 
그 다음 T번 반복하여 N과 M을 입력 받고, math 모듈의 comb 함수를 사용하여 다리를 지을 수 있는 경우의 수를 계산합니다. 
마지막으로 계산된 다리의 개수를 출력합니다.
"""