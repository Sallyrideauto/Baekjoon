n = int(input())

i = 1
cnt = 1
while n > i:
    i += 6*cnt
    cnt += 1
    
print(cnt)

"""
위 코드는 입력받은 숫자 n이 최종 도착하게 되는 방 번호라고 가정하고, 
벌집의 구조에 따라서 최소한으로 지나가는 방의 수를 계산합니다.

먼저 변수 i와 cnt를 초기화한 뒤, i가 n보다 작은 동안 다음과 같은 연산을 반복합니다.

1. 방 번호를 1부터 시작해서 1씩 증가시키는 것 대신, 
1번 방을 중심으로 육각형 모양으로 나열된 방들을 1, 7, 19, 37, ... 번 방으로 번호를 매깁니다. 
이러한 방식으로 번호를 매기면, 각 방 사이의 거리는 모두 동일합니다.
2. 이동할 때는, 현재 방에서 다음으로 이동할 방의 번호는 현재 방의 번호보다 1 큰 번호입니다. 
즉, 이웃한 방들끼리는 번호가 1씩 차이가 나게 됩니다.
3. 벌집의 구조에 따라서, 현재 방에서 이동할 수 있는 방은 현재 방에서 1칸 떨어진 6개의 방입니다. 
따라서 현재 방에서 다음으로 이동할 수 있는 방의 번호는 현재 방의 번호 + 1 + (6 x (cnt-1)) 번째 방입니다.
4. 이동할 방의 번호가 n보다 커질 때까지, i와 cnt를 갱신해가며 반복합니다.

최종적으로 구해진 cnt는 중앙 방에서 n번 방까지 최소한으로 이동하기 위해 거쳐야 하는 방의 개수입니다. 
출력문을 추가하여 이 값을 출력해주면 됩니다.
"""